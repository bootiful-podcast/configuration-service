name: Deploy


env:
  APP_NAME: configuration
  GIT_PASSWORD: ${{ secrets.GIT_PASSWORD }}
  GIT_USERNAME: ${{ secrets.GIT_USERNAME }}
  BP_MODE_LOWERCASE: production
  BP_MODE : PRODUCTION
  CONFIGURATION_SERVER_USERNAME: ${{ secrets.CONFIGURATION_SERVER_USERNAME }}
  CONFIGURATION_SERVER_PASSWORD: ${{ secrets.CONFIGURATION_SERVER_PASSWORD }}
  GH_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
  CONFIGURATION_SERVER_URI: https://configuration.bootifulpodcast.fm
  GKE_CLUSTER:   ${{ secrets.GKE_CLUSTER }}
  GCLOUD_ZONE:  ${{ secrets.GCLOUD_ZONE }}
  NS_NAME:  ${{ secrets.NS_NAME }}
  GCLOUD_SA_KEY:  ${{ secrets.GCLOUD_SA_KEY }}

on:
  repository_dispatch:
    types: [ deploy-production-event, deploy-development-event ]

  create:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # - uses: bootiful-podcast/bp-mode-github-action@v34

      - uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: 17

      - uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCLOUD_SA_KEY }}'


      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: '${{ env.GKE_CLUSTER  }}'
          location: '${{ env.GCLOUD_ZONE }}'

      - run: |
          gcloud config set project $GCLOUD_PROJECT 
          gcloud --quiet auth configure-docker
          kubectl get pods

      - name: Deploy Spring Cloud Config Server
        run: |
          kubectl get ns/$NS_NAME || kubectl create ns $NS_NAME 
          kubectl config set-context --current --namespace=$NS_NAME
          kubectl config view --minify | grep namespace: && echo "found the namespace.."

          cd $GITHUB_WORKSPACE/deploy
          ./build.sh
          ./deploy.sh

